mlflow:
  path: ../../../../logs  # path to store mlflow experience
  run_name: replicate-1  # name of the mlflow experience

io:
  input_dir: ../../../../datasets/CoG_12  # path to train, val and test dataset as h5py files # download training/validation set from zenodo
  model_path: ../../../models/proli  # path where are saved the trained model
  specific_test_dir:  # if path test dataset is different from training/validation datasets

data:
  grid_spacing: 1.0  # distance between grid points in angstrom
  max_dist: 12  # max distance from complex center
  voxel: false  # use gaussian distribution on voxel

training:
  learning_rate: 1e-5  # learning rate
  weight_decay: 0.0001  # lambda for weight decay
  batch_size: 20  # batch size
  num_epochs: 200  # max number of epochs 200
  patience: 20  # early stopping
  only_test:  # if true, only predict on test set (no training), if we provide the path of the log this prevent loading the whole training dataset to calculate charges

network:
  conv_channels: [ 19, 64, 128, 256 ]  # number of filters in conv layers
  conv_kernel_size: 5  # patch size for convolutional layers
  pool_kernel_size: 2  # patch size for pooling layers
  dense_sizes: [ 16384, 1000, 500, 200 ]  # number of neurons in dense layers
  drop_p: 0.2  # originally 0.5 # probability for dropout
  pretrained_path:  # path for a specific pretrained model

experiment_name: proli
