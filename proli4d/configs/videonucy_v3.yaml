hydra: #prevent hydra log from filing home
  run:
    dir: ${oc.env:luh_CCFRWORK}/outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}

experiment:
  name: videonucy_v2
  run: training0  # mlflow runname
  path: ${oc.env:luh_CCFRSCRATCH}/mlruns
  by_complex: true  # if false, it is by simulation
  model_path: ${oc.env:luh_CCFRSCRATCH}/models/convlstm
  
io:
  by_complex_dir: ${oc.env:luh_ALL_CCFRWORK}/version4D_v3/inputs/by_complex
  by_sim_dir: ${oc.env:luh_ALL_CCFRWORK}/version4D_v3/inputs/by_sim
  train_samples: training_samples.txt
  val_samples: validation_samples.txt
  test_samples: test_samples.txt
  affinities:
    - ${oc.env:luh_ALL_CCFRWORK}/version4D/inputs/affinities/INDEX_general_PL_data.2019
    - ${oc.env:luh_ALL_CCFRWORK}/version4D/inputs/affinities/INDEX_refined_data.2019
  train_dir: ${oc.env:luh_ALL_CCFRWORK}/deep_learning/pafnucy/data/4D_data_v3/training_set
  val_dir: ${oc.env:luh_ALL_CCFRWORK}/deep_learning/pafnucy/data/4D_data_v3/validation_set
  test_dir: ${oc.env:luh_ALL_CCFRWORK}/deep_learning/pafnucy/data/4D_data_v3/test_set
  
data_setup:
  grid_spacing: 1.0  # distance between grid points in angstrom
  max_dist: 12  # max distance from complex center # TODO still useful 
  partial_charges:  # previously computed on all simulations from train dataset
    mean: -0.19279409
    std: 0.48856917
  frames: 50  # number of frames to be extracted from each simulation (max 50)
  keep_frames_in_order: true
  features: 19
  
training:
  learning_rate: 1e-5  # learning rate
  weight_decay: 1e-7  # lambda value for L2 regularisation of the loss
  batch_size: 8  # batch size for one GPU, multi-GPU training
  num_epochs: 100  # max number of epochs
  patience: 10  # early stopping
  
network:
  # number of channels before and after each ConvLSTM layer
  convlstm_cfg: [19, 32, 64, 128]
  # number of neurons before and after each FullyConnected layer
  fc_cfg: [8192, 256]
  pretrained_path:
  mean_test:
  sim_test:
  
debug: false
